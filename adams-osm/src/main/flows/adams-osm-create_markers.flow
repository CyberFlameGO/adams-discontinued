# Project: adams
# Date: 2016-12-21 13:49:09
# User: fracpete
# Charset: UTF-8
adams.flow.control.Flow -annotation "Flow to demonstrate how to display based on data from a spreadsheet.\\nThis flow draws markers for the capitals of the world." -flow-execution-listener adams.flow.execution.NullListener
 adams.flow.standalone.CallableActors
  adams.flow.sink.DisplayPanelManager -name "City locations" -width 740 -x -3 -provider "adams.flow.sink.SpreadSheetDisplay -name \"City locations\" -short-title true -x -3 -writer adams.data.io.output.NullWriter" -entry-name-variable name
  adams.flow.sink.OpenStreetMapViewer -name Map -short-title true -writer adams.gui.print.NullWriter -tile-source adams.flow.sink.openstreetmapviewer.OpenStreetMapSource -tile-loader adams.flow.sink.openstreetmapviewer.OpenStreetMapCachedLoader -hit-listener adams.flow.sink.openstreetmapviewer.SimpleMapObjectHitListener -click-listener adams.flow.sink.openstreetmapviewer.NullMapClickListener -mapobject-pruner adams.flow.sink.openstreetmapviewer.NullPruner -map-overlay adams.flow.sink.openstreetmapviewer.NullMapOverlay -initial-zoom 1 -layer-tree true -layer Capitals
 adams.flow.standalone.SetVariable -var-name radius -var-value 25
 adams.flow.source.FileSupplier -file ${FLOWS}/data/cow.csv
 adams.flow.transformer.SpreadSheetFileReader -reader "adams.data.io.input.CsvSpreadSheetReader -data-row-type adams.data.spreadsheet.DenseDataRow -spreadsheet-type adams.data.spreadsheet.DefaultSpreadSheet -missing \"\" -separator ;"
 adams.flow.control.Tee -name "display original spreadsheet"
  adams.flow.transformer.SetVariable -var-name name -var-value original
  adams.flow.sink.CallableSink -callable "City locations"
 adams.flow.transformer.SpreadSheetRowFilter -name "has capital" -finder "adams.data.spreadsheet.rowfinder.ByNumericValue -att-index HasCapital -minimum 1.0 -minimum-included true -maximum NaN"
 adams.flow.transformer.SpreadSheetRowFilter -name "has population" -finder "adams.data.spreadsheet.rowfinder.ByNumericValue -att-index population -minimum 1.0 -minimum-included true -maximum NaN"
 adams.flow.transformer.Convert -name "join LAT and LON" -conversion "adams.data.conversion.SpreadSheetJoinColumns -columns UNc_latitude,UNc_longitude -glue \" \" -column-name LOCATION"
 adams.flow.transformer.Convert -name "create GPS object column" -conversion "adams.data.conversion.SpreadSheetStringColumnToObject -column LOCATION -keep-failed true -handler adams.data.spreadsheet.GPSDecimalDegrees"
 adams.flow.control.Branch
  adams.flow.control.Sequence -name map
   adams.flow.transformer.Convert -name "create mapobjects" -conversion "adams.data.conversion.SpreadSheetToMapObjects -generator \"adams.data.conversion.mapobject.SimpleDotMarkerGenerator -layer Capitals -gps LOCATION -name UNen_capital -additional-attributes population -dot-color #0000ff\""
   adams.flow.sink.CallableSink -callable Map
  adams.flow.control.Sequence -name spreadsheet
   adams.flow.transformer.SetVariable -var-name name -var-value "GPS objects"
   adams.flow.sink.CallableSink -callable "City locations"
