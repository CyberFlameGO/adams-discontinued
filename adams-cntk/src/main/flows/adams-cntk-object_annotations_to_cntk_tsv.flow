# Project: adams
# Modules: adams-cntk,adams-core,adams-imaging,adams-ml,adams-spreadsheet,adams-visualstats
# Date: 2018-03-21 12:45:56
# User: fracpete
# Charset: UTF-8
adams.flow.control.Flow -annotation "Converts object annotations to TSV files for CNTK." -flow-execution-listener adams.flow.execution.NullListener
 adams.flow.standalone.CallableActors
  adams.flow.sink.ProgressBar -writer adams.gui.print.NullWriter -max @{max}
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.source.EnterManyValues -stop-if-canceled true -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name in_dir -display \"Input directory\" -help \"directory with annotated images\" -type DIRECTORY_ABSOLUTE -default-value @{flow_dir}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name out_dir -display \"Output directory\" -help \"directory for storing the generated TSV files\" -type DIRECTORY_ABSOLUTE -default-value @{flow_dir}" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name prefix -display \"Object prefix\" -help \"The prefix for the objects in the report\" -default-value Object." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name has_labels -display Labels? -help \"Are labels stored in the annotations\" -type BOOLEAN -default-value false" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name label_suffix -display \"Label suffix\" -help \"The suffix for the report fields containing the labels\" -default-value .type" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name default_label -display \"Default label\" -help \"The default label to use if there are no labels stored with the objects themselves.\" -default-value Object" -output-type MAP
  adams.flow.transformer.MapToVariables
 adams.flow.control.Trigger -name processinput
  adams.flow.standalone.SetVariable -name "reset image count" -var-name img_count -var-value 0
  adams.flow.source.FileSystemSearch -output-array true -search "adams.flow.source.filesystemsearch.LocalFileSearch -directory @{in_dir} -regexp .*.report" -use-forward-slashes true
  adams.flow.control.Tee -name "# images"
   adams.flow.transformer.ArrayLength
   adams.flow.transformer.SetVariable -var-name max
  adams.flow.transformer.ArrayToSequence
  adams.flow.control.Tee -name progress
   adams.flow.transformer.IncVariable -var-name img_count -output-variable-value true
   adams.flow.sink.CallableSink -callable ProgressBar
  adams.flow.control.Tee -name "make output filenames"
   adams.flow.transformer.BaseName -remove-extensions true
   adams.flow.control.Tee -name bboxes.tsv
    adams.flow.transformer.PrependDir -prefix @{out_dir} -use-forward-slashes true
    adams.flow.transformer.AppendName -suffix .bboxes.tsv -no-separator true -use-forward-slashes true
    adams.flow.transformer.SetVariable -var-name bboxes_file
   adams.flow.control.Tee -name bboxes.labels.tsv
    adams.flow.transformer.PrependDir -prefix @{out_dir} -use-forward-slashes true
    adams.flow.transformer.AppendName -suffix .bboxes.labels.tsv -no-separator true -use-forward-slashes true
    adams.flow.transformer.SetVariable -var-name labels_file
  adams.flow.transformer.ReportFileReader -reader adams.data.io.input.DefaultSimpleReportReader
  adams.flow.transformer.SetStorageValue -storage-name report
  adams.flow.transformer.MatchReportFields -regexp ^Object.*.x$
  adams.flow.control.Tee -name "object variables"
   adams.flow.transformer.Convert -conversion adams.data.conversion.FieldToString
   adams.flow.transformer.StringReplace -find .*\\.([0-9]+)\\.x -replace $1
   adams.flow.transformer.SetVariable -name index -var-name index
   adams.flow.transformer.SetVariable -name x -var-name field_x -var-value @{prefix}@{index}.x[N] -expand-value true
   adams.flow.transformer.SetVariable -name y -var-name field_y -var-value @{prefix}@{index}.y[N] -expand-value true
   adams.flow.transformer.SetVariable -name width -var-name field_width -var-value @{prefix}@{index}.width[N] -expand-value true
   adams.flow.transformer.SetVariable -name height -var-name field_height -var-value @{prefix}@{index}.height[N] -expand-value true
   adams.flow.transformer.SetVariable -name label -var-name field_label -var-value @{prefix}@{index}.@{label_suffix}[S] -expand-value true
  adams.flow.control.Trigger -name "object parameters"
   adams.flow.source.StorageValue -storage-name report -conversion adams.data.conversion.UnknownToUnknown
   adams.flow.control.Tee -name x
    adams.flow.transformer.SetVariable -name reset -var-name x -var-value -1
    adams.flow.transformer.GetReportValue -field @{field_x}
    adams.flow.transformer.MathExpression -round-output true
    adams.flow.transformer.SetVariable -name set -var-name x
   adams.flow.control.Tee -name y
    adams.flow.transformer.SetVariable -name reset -var-name y -var-value -1
    adams.flow.transformer.GetReportValue -field @{field_y}
    adams.flow.transformer.MathExpression -round-output true
    adams.flow.transformer.SetVariable -name set -var-name y
   adams.flow.control.Tee -name width
    adams.flow.transformer.SetVariable -name reset -var-name width -var-value -1
    adams.flow.transformer.GetReportValue -field @{field_width}
    adams.flow.transformer.SetVariable -name set -var-name width
    adams.flow.transformer.MathExpression -expression X+@{x} -round-output true
    adams.flow.transformer.SetVariable -name "set (2)" -var-name x2
   adams.flow.control.Tee -name height
    adams.flow.transformer.SetVariable -name reset -var-name height -var-value -1
    adams.flow.transformer.GetReportValue -field @{field_height}
    adams.flow.transformer.SetVariable -name set -var-name height
    adams.flow.transformer.MathExpression -expression X+@{y} -round-output true
    adams.flow.transformer.SetVariable -name "set (2)" -var-name y2
   adams.flow.control.Tee -name label
    adams.flow.transformer.SetVariable -name reset -var-name label -var-value @{default_label}
    adams.flow.transformer.GetReportValue -field @{field_label}
    adams.flow.transformer.SetVariable -name set -var-name @{label}
  adams.flow.control.Trigger -name "cnt label output"
   adams.flow.source.Variable -var-name label -conversion adams.data.conversion.StringToString
   adams.flow.sink.DumpFile -output @{labels_file} -append true
  adams.flow.control.Trigger -name "cnt bbox output"
   adams.flow.source.CombineVariables -expression @{x}\t@{y}\t@{x2}\t@{y2} -conversion adams.data.conversion.StringToString
   adams.flow.sink.DumpFile -output @{bboxes_file} -append true