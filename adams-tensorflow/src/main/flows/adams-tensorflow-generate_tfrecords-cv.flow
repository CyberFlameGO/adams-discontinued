# Project: adams
# Date: 2020-02-17 13:39:51
# User: fracpete
# Charset: UTF-8
# Modules: adams-core,adams-imaging,adams-json,adams-math,adams-ml,adams-python,adams-spreadsheet,adams-tensorflow,adams-visualstats,adams-xml
#
adams.flow.control.Flow -annotation "Generates TFRecords for the object detection framework.\\nUses the specified cross-validation fold count to generate train/test\\nsplits on the located .report files. These .report files are fed\\ninto the \\\"convert-annotations\\\" tool to generate the actual \\ntfrecords files (train.tfrecords and test.tfrecords).\\n\\nRequires:\\n- virtualenv with Python 3.7 (use adams-tensorflow-generate_tfrecords-requirements.txt)\\n- point Python executable when prompted to Python exec in virtualenv" -flow-execution-listener adams.flow.execution.NullListener -flow-restart-manager adams.flow.control.flowrestart.NullManager
 adams.flow.standalone.CallableActors
  adams.flow.sink.Display -name "Script output" -short-title true -display-type adams.flow.core.displaytype.Default -width 1200 -writer adams.data.io.output.NullWriter -wrap-style-word true
 adams.flow.standalone.SetVariable -name "restore file" -var-name restore_props -var-value @{flow_filename_long}.props -expand-value true
 adams.flow.source.Start
 adams.flow.control.Trigger -name "prompt user"
  adams.flow.standalone.SetVariable -name "reset mappings" -var-name mappings -var-value ""
  adams.flow.standalone.SetVariable -name "reset labels" -var-name labels -var-value ""
  adams.flow.standalone.SetVariable -name "reset verbose_option" -var-name verbose_option -var-value ""
  adams.flow.source.EnterManyValues -stop-if-canceled true -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name reports_dir -display \"Directory with annotations\" -help \"directory containing images and reports\" -type DIRECTORY_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name output_dir -display \"Output directory for tfrecords\" -type DIRECTORY_ABSOLUTE -default-value ." -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name shards -display \"Number of tfrecords shards\" -help \"use < 2 to just turn off sharding\" -type INTEGER -default-value -1" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name label_mappings -display \"Label replacement mappings\" -help \"blank separated list of old=new\"" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name labels_predefined -display \"Predefined labels (comma-sep. list)\" -help \"optional list of predefined labels\"" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name label_regexp -display \"Regexp for labels to include\" -type REGEXP -default-value .*" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name folds -display \"Cross-validation folds\" -type INTEGER -default-value 10" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name python_exec -display \"Python executable\" -help \"Python executable to use\" -type FILE_ABSOLUTE -default-value python" -value "adams.flow.source.valuedefinition.DefaultValueDefinition -name verbose -display \"Verbose mode?\" -help \"Will output progress information (useful when encountering errors)\" -type BOOLEAN -default-value false" -output-type MAP -restoration-enabled true -restoration-file @{restore_props}
  adams.flow.transformer.MapToVariables
  adams.flow.control.Trigger -name "convert script"
   adams.flow.source.Variable -var-name python_exec -conversion adams.data.conversion.StringToString
   adams.flow.transformer.DirName -use-forward-slashes true
   adams.flow.transformer.AppendName -suffix convert-annotations -use-forward-slashes true
   adams.flow.transformer.SetVariable -name convert_script -var-name convert_script -expand-value true
  adams.flow.transformer.SetVariable -name "train list" -var-name train_list -var-value @{output_dir}/train.list -expand-value true
  adams.flow.transformer.SetVariable -name "test list" -var-name test_list -var-value @{output_dir}/test.list -expand-value true
  adams.flow.control.ConditionalTrigger -name "label mappings" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{label_mappings}\\\\\\\" != \\\\\\\"\\\\\\\"\""
   adams.flow.source.Variable -var-name label_mappings -conversion adams.data.conversion.StringToString
   adams.flow.transformer.StringSplit -expression " "
   adams.flow.control.ArrayProcess
    adams.flow.transformer.StringInsert -position first -value "--mapping "
   adams.flow.transformer.StringJoin -glue " "
   adams.flow.transformer.SetVariable -var-name mappings
  adams.flow.control.ConditionalTrigger -name "verbose option" -condition "adams.flow.condition.bool.Expression -expression \"@{verbose} = true\""
   adams.flow.standalone.SetVariable -name "reset verbose_option" -var-name verbose_option -var-value -v
  adams.flow.control.ConditionalTrigger -name "predefined labels" -condition "adams.flow.condition.bool.Expression -expression \"\\\\\\\"@{labels_predefined}\\\\\\\" != \\\\\\\"\\\\\\\"\""
   adams.flow.standalone.SetVariable -var-name labels -var-value "--labels @{labels_predefined}" -expand-value true
 adams.flow.control.Trigger -name generate
  adams.flow.standalone.PythonEnvironment -python-path-update-type REPLACE -python @{python_exec}
  adams.flow.source.Start
  adams.flow.control.Trigger -name "locate files"
   adams.flow.standalone.SetVariable -name "reset fold count" -var-name fold_count -var-value 0
   adams.flow.source.FileSystemSearch -output-array true -search "adams.flow.source.filesystemsearch.LocalFileSearch -directory @{reports_dir} -regexp .*\\\\.report -sorting SORT_BY_NAME -recursive true"
   adams.flow.transformer.PrepareFileBasedDataset -preparation "adams.flow.transformer.preparefilebaseddataset.CrossValidation -num-folds @{folds}"
   adams.flow.transformer.IncVariable -var-name fold_count
   adams.flow.control.ContainerValuePicker -value Train
    adams.flow.transformer.StringJoin -glue \n
    adams.flow.sink.DumpFile -output @{train_list}
   adams.flow.control.ContainerValuePicker -name "ContainerValuePicker (2)" -value Test
    adams.flow.transformer.StringJoin -glue \n
    adams.flow.sink.DumpFile -output @{test_list}
   adams.flow.control.Tee -name "file names"
    adams.flow.transformer.SetVariable -name "train tfrecords" -var-name train_tfrecords -var-value @{output_dir}/train-@{fold_count}.tfrecords -expand-value true
    adams.flow.transformer.SetVariable -name "test tfrecords" -var-name test_tfrecords -var-value @{output_dir}/test-@{fold_count}.tfrecords -expand-value true
    adams.flow.transformer.SetVariable -name "train pb label map" -var-name train_pbtxt -var-value @{output_dir}/train-@{fold_count}.pbtxt -expand-value true
    adams.flow.transformer.SetVariable -name "test pb label map" -var-name test_pbtxt -var-value @{output_dir}/test-@{fold_count}.pbtxt -expand-value true
   adams.flow.control.Trigger -name "generate train"
    adams.flow.source.PythonExec -logging-level INFO -output-type BOTH -prefix-stdout "[train-out] " -prefix-stderr "[train-err] " -script @{convert_script} -script-options "@{verbose_option} adams --input-files @{train_list} @{mappings} tfrecords --output @{train_tfrecords} --shards @{shards} --regexp @{label_regexp} @{labels} --protobuf @{train_pbtxt}" -variable true
    adams.flow.sink.CallableSink -callable "Script output"
   adams.flow.control.Trigger -name "generate test"
    adams.flow.source.PythonExec -logging-level INFO -output-type BOTH -prefix-stdout "[test-out] " -prefix-stderr "[test-err] " -script @{convert_script} -script-options "@{verbose_option} adams --input-files @{test_list} @{mappings} tfrecords --output @{test_tfrecords} --shards @{shards} --regexp @{label_regexp} @{labels} --protobuf @{test_pbtxt}" -variable true
    adams.flow.sink.CallableSink -callable "Script output"